(()=>{"use strict";var e={913:()=>{try{self["workbox:core:6.5.2"]&&_()}catch(e){}},977:()=>{try{self["workbox:precaching:6.5.2"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:6.5.2"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:6.5.2"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(913);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(977);function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function f(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?n.body:await n.blob();return new Response(c,r)}function d(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class p{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;s(873);function y(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=y(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=y(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=y(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=d(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===d(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=y(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class _ extends class{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new w(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(_.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:i||t})),t&&r){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==_.copyRedirectedCacheableResponsesPlugin&&(a===_.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(_.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}_.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},_.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await f(e):e};class v{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new _({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=o(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(80);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"4895539e199648d2197378238a7f9862","url":"404.html"},{"revision":"e1faff123cada6156f50e0cd8d2808d9","url":"A-Labs/lab1-alt.html"},{"revision":"ba0eb130037b64ad169e061a63ee4d61","url":"A-Labs/lab1.html"},{"revision":"eb4136ac98b5c406ff60474698734d00","url":"A-Labs/lab2-stage1.html"},{"revision":"7c6fcc63c089a818a93f7609e87895a6","url":"A-Labs/lab2-stage2.html"},{"revision":"ec3b6e8a9ff8f445ad04bb8d886fbf36","url":"A-Labs/lab3-stage1.html"},{"revision":"032bbf4c240f510620b98699b6c59ed2","url":"A-Labs/lab3-stage2.html"},{"revision":"4af4efe293d75ca87d7eb33d7ba3b38e","url":"A-Labs/lab4-home.html"},{"revision":"e29df81ee174429ebe5a719fa8e2b496","url":"A-Labs/lab4-vl.html"},{"revision":"7c6d84abfee8ae991cf93b699b9f9398","url":"A-Labs/lab5.html"},{"revision":"13d83ade32ba94c600a9c132476a3b6f","url":"A-Labs/lab6.html"},{"revision":"f13bf23a7f4ca0e01d8d19aa93f61332","url":"A-Labs/lab7.html"},{"revision":"e6941d49d6b301665d56decdbe2f009b","url":"A-Labs/lab8.html"},{"revision":"b3646aee0a3ed7b52ccd7b5c8c61ba21","url":"A-Labs/prelab0.html"},{"revision":"4a30e0992a6a9401f7f666bf4fc5df74","url":"assets/css/styles.099fe1a9.css"},{"revision":"41ec450e65ab553d2da8d2600bfbf810","url":"assets/js/051d08f9.2142a8c5.js"},{"revision":"0bb6ff7757dc135319db55bd731b1d7e","url":"assets/js/08c0442c.33baab78.js"},{"revision":"362ab5446d2f6ba9891fabf9c521a87f","url":"assets/js/131.72ad6e47.js"},{"revision":"c0cf910111ff92a493f7047a42a19352","url":"assets/js/17896441.0f8726fa.js"},{"revision":"64480cfde5e5a4d21c4036493f578550","url":"assets/js/19e11dc5.90b14555.js"},{"revision":"4711758e34839ef06d7847bb87c3787e","url":"assets/js/1be78505.4e9b6da6.js"},{"revision":"1c509a8e78acc5b7f1ebd628e917f0fd","url":"assets/js/1ccfa441.44110056.js"},{"revision":"3555f0fae28b97a05cb9b4c3345c563f","url":"assets/js/1fd0c4ca.74f6e2f2.js"},{"revision":"658d21535d6476044a74bf087ebaccec","url":"assets/js/283.ccefc2ef.js"},{"revision":"956408355fa59a5f30f3e0f626465f49","url":"assets/js/42bae962.fa284030.js"},{"revision":"b8496a52db81903d30513edf2b7efa09","url":"assets/js/439222d1.b951679c.js"},{"revision":"5e7c799280bb2baa23bbbc74742d4eaa","url":"assets/js/4f8afb8a.d77153e5.js"},{"revision":"51f1db7c0ff1f58a109cccac0f133ec1","url":"assets/js/539.40aac3f7.js"},{"revision":"8005ab7fd505911ce6fbffe81ac2db03","url":"assets/js/5a00d9d3.92660370.js"},{"revision":"5a38385fe77cb439a581d0f71e91f4fd","url":"assets/js/5b855e0f.1c321e41.js"},{"revision":"46a99e384067df6079d8e6d28977b3dc","url":"assets/js/5f827bca.b54e644e.js"},{"revision":"b5cad32afa6bb3c50816b9642adab6bb","url":"assets/js/61c5f690.88ac897d.js"},{"revision":"df964c884b84490639fec60765f1e79f","url":"assets/js/66689c68.9050b715.js"},{"revision":"298356ba0f426d44ee5e906dbb85e34a","url":"assets/js/781f504e.6a3a2cfc.js"},{"revision":"fca00e889a44e501730064cd18b2b584","url":"assets/js/7a9b1790.0ff9d48b.js"},{"revision":"b2ead62258e4393024b1d6ba6d60fa9d","url":"assets/js/7bd52859.e795c0fb.js"},{"revision":"48fa63014b08eb5085e6e6ef792edd2a","url":"assets/js/80242252.eac62eac.js"},{"revision":"963cc3914a720b5be7986276d6659262","url":"assets/js/81310f40.f2aa0285.js"},{"revision":"378cb6deae9339931859a0d574778c80","url":"assets/js/8661af7e.6cccfaf5.js"},{"revision":"8486a206e39cd70e9cb1da6a3697a70f","url":"assets/js/886429c4.a501545b.js"},{"revision":"60f2998c035344f4f3b0bc396e7e0de3","url":"assets/js/8b46bc52.7be846d7.js"},{"revision":"7b23d58c62c361b6f960bfb7fba9ebd4","url":"assets/js/935f2afb.84af9f71.js"},{"revision":"9e477eb017deb329a93fee82c159b3d9","url":"assets/js/972.82cf130d.js"},{"revision":"446e5e27c5ef7ab4374284f1fa782de7","url":"assets/js/9ff20dde.dc4faa90.js"},{"revision":"b3cb52fa1a92747f038d27df27c148ff","url":"assets/js/ab83ab4e.fbb7bc37.js"},{"revision":"1e024d822d80aee6f943a1183541a40a","url":"assets/js/b5a834d3.b52e16a8.js"},{"revision":"ea0121ac11931397554d8761a4fe0bd4","url":"assets/js/b7f097d6.b7e56e46.js"},{"revision":"f3d2a918b2f1a7fe2ef8b8bbf4f3fc72","url":"assets/js/b8d87c4c.ce5f2373.js"},{"revision":"51dfc573aed811168cbf052cd73da45e","url":"assets/js/b9232272.95875e6b.js"},{"revision":"fbb0964bbd289ec951b2514ea2e0b199","url":"assets/js/c0e20c00.a5e02ee6.js"},{"revision":"69410dd1031186f6a661537054858bf3","url":"assets/js/c2beb580.f9ce5e99.js"},{"revision":"4a6e7047d9dac4d19299c84e0198595a","url":"assets/js/d909226c.149fc767.js"},{"revision":"631c8f62392c405da05daec521f25ec2","url":"assets/js/e3730d1b.a3e930f1.js"},{"revision":"b3c1f829095bd528aafd51ebda163812","url":"assets/js/e4d7fcca.95a36829.js"},{"revision":"6f9708d185cfebd3f9f4b47987b4ec25","url":"assets/js/ea934244.3f96a88b.js"},{"revision":"749bc2e5c850e1c1e3c82765b464ec93","url":"assets/js/eae12f21.d6df4eaf.js"},{"revision":"fa286607440f11444c92964406cb8931","url":"assets/js/eb6a5da1.f40dd021.js"},{"revision":"e964140d09f8884d087cd56157f1a23c","url":"assets/js/ed1888c1.e5bb74ba.js"},{"revision":"bdb096545a489e6c0ce6d2121dc8012f","url":"assets/js/fec47001.0da70fcb.js"},{"revision":"bb00963f2c7fec496e445a01177750f4","url":"assets/js/main.43f4e331.js"},{"revision":"ba96d32ae9da76c4c36b3899455894dd","url":"assets/js/runtime~main.55e5135c.js"},{"revision":"4cd86bc9db5d03928008cb7695e34a45","url":"B-Assignments/assignment1.html"},{"revision":"6852d87765ee636aab3a45b898c7fd9e","url":"B-Assignments/assignment2.html"},{"revision":"ddd26abb8ee59e2accf480e0225562db","url":"C-ExtraResources/advanced-dns-topics.html"},{"revision":"461802233ed82ea3459d2aa8ab552a96","url":"C-ExtraResources/advanced-dns.html"},{"revision":"d5d2dc4c7a26bbd9d6873b8b7c78f98f","url":"C-ExtraResources/ansible-setup.html"},{"revision":"7a909ff1cb3e93eb4252f4798d4a5706","url":"C-ExtraResources/dns-review.html"},{"revision":"756d55393843fc90dfbb8d7f5269da0a","url":"C-ExtraResources/due-dates.html"},{"revision":"29ffa811f54a4599f4fd3cbc3a0283a4","url":"C-ExtraResources/email-protocols-2.html"},{"revision":"2d69f7e5eac352f8a60c5ee7ba4d6b50","url":"C-ExtraResources/email-protocols.html"},{"revision":"fbf2daf6a22ff86cde2c888b244c2561","url":"C-ExtraResources/internet-mail-system.html"},{"revision":"048102fd346b95741e42a5747c12ec4b","url":"C-ExtraResources/ldap-protocol.html"},{"revision":"e9f20fea9b58e1bbe11362855bac5d87","url":"C-ExtraResources/linux-firewall-review.html"},{"revision":"66d269fd4e913e8bc4ab2e37ca9b15c2","url":"C-ExtraResources/local-and-network-security.html"},{"revision":"68601862dd38d43f205abf6bf766169c","url":"C-ExtraResources/network-file-system.html"},{"revision":"e3feca1d4e7f1266ccba72069e258ef6","url":"C-ExtraResources/network-storage-and-access.html"},{"revision":"45035a637611a4aa2c2ca40d0cc4a4a5","url":"C-ExtraResources/openldap-server-admin.html"},{"revision":"2006d13dd0a259a20b8387adab0cb7cf","url":"C-ExtraResources/postfix-spf.html"},{"revision":"33a772688785aeb05922fff4b129a33d","url":"C-ExtraResources/prerequisite-review.html"},{"revision":"05f3d16677a9e2664a68a8bbc7942dbb","url":"C-ExtraResources/required-material-list.html"},{"revision":"5089a80e7581734e9e8ecdfe09e8c0d9","url":"C-ExtraResources/sample-ansible-hosts.html"},{"revision":"97b5da221c93fba9c9d813fe75f942b4","url":"C-ExtraResources/tcp-ip-network-review.html"},{"revision":"f1663d403ec5e66133e4d58c8828eba8","url":"index.html"},{"revision":"2524df02c6e551be5aef857403777080","url":"manifest.json"},{"revision":"be8007925571ba93453093058006af5a","url":"weekly-schedule.html"},{"revision":"7fa1a026116afe175cae818030d4ffc4","url":"img/docusaurus.png"},{"revision":"ef2266bfb84465c731756b58cde0afb8","url":"img/favicon.ico"},{"revision":"22c6eb8088b86099d5a78b5a13f7b24d","url":"img/logo-dark.svg"},{"revision":"8817e00103e8837d17c2758b0ce25c41","url":"img/logo.svg"},{"revision":"2e1cb1ba37fc5ae886ea57248bdb60bd","url":"img/pwa/icon-192x192.png"},{"revision":"a0f8ed72d3d3489353a57a03aeac9b0d","url":"img/pwa/icon-256x256.png"},{"revision":"ab9ed19e2716b5c233d6132d66204d53","url":"img/pwa/icon-384x384.png"},{"revision":"b71acc5b894ccfac0c22eb39a590f2a0","url":"img/pwa/icon-512x512.png"},{"revision":"b9d9189ed8f8dd58e70d9f8b3f693b3e","url":"img/tutorial/docsVersionDropdown.png"},{"revision":"c14bff79aafafca0957ccc34ee026e2c","url":"img/tutorial/localeDropdown.png"},{"revision":"8d04d316f4d1777793ee773fcbf16cea","url":"img/undraw_docusaurus_mountain.svg"},{"revision":"3d3d63efa464a74e2befd1569465ed21","url":"img/undraw_docusaurus_react.svg"},{"revision":"932b535fc71feb29877bc4b9d708b1d0","url":"img/undraw_docusaurus_tree.svg"}],s=new v({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=new URL(e,self.location.href);return t.origin!==self.location.origin?[]:(t.search="",t.hash="",[t.href,`${t.href}${t.pathname.endsWith("/")?"":"/"}index.html`])}(a);for(const i of n){const r=s.getCacheKeyForURL(i);if(r){const s=caches.match(r);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:i,possibleURLs:n,cacheKey:r,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});const s=t.data?.type;"SKIP_WAITING"===s&&self.skipWaiting()}))})()})()})();