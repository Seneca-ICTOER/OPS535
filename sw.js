(()=>{"use strict";var e={913:()=>{try{self["workbox:core:6.5.2"]&&_()}catch(e){}},977:()=>{try{self["workbox:precaching:6.5.2"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:6.5.2"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:6.5.2"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(913);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(977);function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function f(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?n.body:await n.blob();return new Response(c,r)}function d(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class p{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;s(873);function y(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=y(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=y(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=y(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=d(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===d(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=y(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class _ extends class{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new w(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(_.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:i||t})),t&&r){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==_.copyRedirectedCacheableResponsesPlugin&&(a===_.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(_.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}_.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},_.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await f(e):e};class v{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new _({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=o(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(80);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"cdd18f5c433be579f78dfe48d86826f4","url":"404.html"},{"revision":"f064a4ee4ef44849baf25c8554b4ecbd","url":"A-Labs/lab1-alt.html"},{"revision":"06ad24127930b100704038fcba9bb433","url":"A-Labs/lab1.html"},{"revision":"c99851715060b9ee6a27114c7d6bc4bc","url":"A-Labs/lab2-stage1.html"},{"revision":"3eb917403ca39326fa87fa1c1f72a1f7","url":"A-Labs/lab2-stage2.html"},{"revision":"ff9732a6c5a950298d9f5e167512133b","url":"A-Labs/lab3-stage1.html"},{"revision":"26228c2bb9f77cb234a060919b796196","url":"A-Labs/lab3-stage2.html"},{"revision":"2dc0bc4fff5ce96aa08b2c3418b50c72","url":"A-Labs/lab4-home.html"},{"revision":"137412d981fb0e1223ca6966b5d88dd8","url":"A-Labs/lab4-vl.html"},{"revision":"fc777ae19312a64c26b16e6bd86c1b22","url":"A-Labs/lab5.html"},{"revision":"1a1697f343c2b8d2cfd788ab8410c266","url":"A-Labs/lab6.html"},{"revision":"e30d6ab1014a76e8569e7a78a348214b","url":"A-Labs/lab7.html"},{"revision":"75c3242ec3c1c22b50eecfabc734cc43","url":"A-Labs/lab8.html"},{"revision":"59ae2d78bffdc17fc878cf4bcd965696","url":"A-Labs/prelab0.html"},{"revision":"4a30e0992a6a9401f7f666bf4fc5df74","url":"assets/css/styles.099fe1a9.css"},{"revision":"83042c8fbf76cdd0a7666546fb937743","url":"assets/js/051d08f9.e31669ef.js"},{"revision":"aec28daa3df9996f0c267ab9f4d61049","url":"assets/js/05e1b010.f90dbab6.js"},{"revision":"2723b541f9f3f800cb0ab2d4096ae194","url":"assets/js/08c0442c.9f26ce3b.js"},{"revision":"24d766ef660bae2cc670162d0e04fe74","url":"assets/js/17896441.4479f7b3.js"},{"revision":"f5f2a59014bff94a2d8202acd7f52bc3","url":"assets/js/19823dbd.fc44d829.js"},{"revision":"a62c2c013e4c98cf35059644de28d2c0","url":"assets/js/19e11dc5.4f273e9f.js"},{"revision":"c5c0cd3d91f75069e178e1ff509724d0","url":"assets/js/1be78505.9c53b674.js"},{"revision":"31b62f7ec836647adc645a7722be95b6","url":"assets/js/1ccfa441.9f4742df.js"},{"revision":"fe764b003d8d03b05859deedaede45a6","url":"assets/js/1fd0c4ca.fcce3576.js"},{"revision":"0432e3986ef54ae13e1d91bd5cb5d170","url":"assets/js/2539.12361a61.js"},{"revision":"10e478c4110617aeb52e05e6af53ff48","url":"assets/js/42bae962.6938dd3d.js"},{"revision":"6eebbd019cf96e83f1fc0108957eab67","url":"assets/js/439222d1.26ee5c00.js"},{"revision":"67ca2c193ca398f0366be4e3c7648c86","url":"assets/js/4972.6a97eff6.js"},{"revision":"5ed8c4308e7eca3e85deeaa65e3367ca","url":"assets/js/4f8afb8a.ea606156.js"},{"revision":"ceb5501deb59ff87272548e9b2af29a4","url":"assets/js/5131.c38da51d.js"},{"revision":"73878cac0ccb4426771b6924b2827d48","url":"assets/js/5283.44663f41.js"},{"revision":"4dede859f989700de7d9c0b8fc43e9f1","url":"assets/js/5a00d9d3.573939da.js"},{"revision":"49f47606bbefc65b331a558f1559aa6d","url":"assets/js/5b855e0f.4f1acfe7.js"},{"revision":"476b419b96bce96b5957c703949a0eea","url":"assets/js/5f827bca.480faebe.js"},{"revision":"1f000345c03ed779bf00fa7817815433","url":"assets/js/61c5f690.ccba1cbd.js"},{"revision":"25e19565c37a741828573c22e339f4ba","url":"assets/js/66689c68.181aae24.js"},{"revision":"8f78e18486b61717009e122e89111f57","url":"assets/js/781f504e.66eff9c8.js"},{"revision":"645e21b55556ec451231ff2a696fe75f","url":"assets/js/7a9b1790.a2285edd.js"},{"revision":"a09c28fb634487c522e2d0bcf4f77d7f","url":"assets/js/7bd52859.47d2f189.js"},{"revision":"db1b72bd72a27305e5d3084ea7fd4b3d","url":"assets/js/80242252.7774db52.js"},{"revision":"cdb4f09a1cdbe14e64fb93c8ae2bb265","url":"assets/js/81310f40.c0acd45d.js"},{"revision":"378cb6deae9339931859a0d574778c80","url":"assets/js/8661af7e.6cccfaf5.js"},{"revision":"2ca8d9314b1c1106790fae294c08893a","url":"assets/js/886429c4.378990fe.js"},{"revision":"228ba4ea6a2fa8e1326839267ed79945","url":"assets/js/8b46bc52.374dac82.js"},{"revision":"3482f4ea3a9f096c9f969df477f0efd5","url":"assets/js/8fca409b.c47d10e9.js"},{"revision":"b42993f9aeb3547df0ac8aa0761ee494","url":"assets/js/935f2afb.0898be73.js"},{"revision":"a6f98fcc695e7de23567c8bd0583fe19","url":"assets/js/9c653ac7.d5e5d3ba.js"},{"revision":"d9c8724e6f1835f8ce28fa6679c4a8a2","url":"assets/js/9ff20dde.a132a344.js"},{"revision":"7e60e5ac5bcaa4fb2f33cc640d9b290b","url":"assets/js/ab83ab4e.738dd52c.js"},{"revision":"fbbad5b86ebb35b8fd8a2ae78676a36e","url":"assets/js/b2c390ce.84e2f25b.js"},{"revision":"9ece34025579c7d814e793a8d2307bd9","url":"assets/js/b5a834d3.b67b395c.js"},{"revision":"eb6e453be64be22660f8a3cfef9bba2d","url":"assets/js/b7f097d6.c0a61e3a.js"},{"revision":"1d0458e4802df429da84cd493f73c302","url":"assets/js/b8d87c4c.fdae7ea4.js"},{"revision":"72bfc2e9b14bd355a41f07fcf3c9eebd","url":"assets/js/b9232272.0e99ed8a.js"},{"revision":"96d6cb1f8db5f14442d6644a8459170b","url":"assets/js/c08ce4b9.4faf6cf1.js"},{"revision":"2e7142e75ae37391844abd3fe410a416","url":"assets/js/c0e20c00.414374cf.js"},{"revision":"90a6b66bb20a42b6fd921e27b7d72242","url":"assets/js/c2beb580.4a00ad69.js"},{"revision":"fca951725579e55a45bb3df9366f2cd6","url":"assets/js/cff41e35.cffbc9bd.js"},{"revision":"f9d3eab9ee320fd23f2a928abca700d3","url":"assets/js/d909226c.9465138f.js"},{"revision":"892c33a3b0235e5c92d53041f6848e0a","url":"assets/js/e3730d1b.0a7db344.js"},{"revision":"70fe469c5909b6b8aeb3f25f8e29572c","url":"assets/js/e4d7fcca.2b0d0ce7.js"},{"revision":"679ed99b94155c6805ad4dc9bc7296c8","url":"assets/js/ea934244.bd16e66d.js"},{"revision":"88b4408239069c4d154d847a1fe79305","url":"assets/js/eae12f21.75a9c099.js"},{"revision":"8d673df213a71269f702180521369648","url":"assets/js/eb6a5da1.70ce3bb2.js"},{"revision":"3045e4936828ab0a6144560e0434d75d","url":"assets/js/ed1888c1.04f40cfd.js"},{"revision":"84bdcf0cec2788b4865135921c5cb6b9","url":"assets/js/f950cb6e.0ee4cb10.js"},{"revision":"56c6e6195e3f3e55442134c72dca2bea","url":"assets/js/fec47001.909540a0.js"},{"revision":"a2703f1a3be1fd10f1351de72d957031","url":"assets/js/main.9b6850b2.js"},{"revision":"8ba54861a8f9d9ed5a7800e825781263","url":"assets/js/runtime~main.326f425b.js"},{"revision":"adeef131215b22ce1c83f38fe9c49910","url":"B-Assignments/assignment1.html"},{"revision":"5035abe2eda83d5b0d7392b74986377b","url":"B-Assignments/assignment2.html"},{"revision":"a0a1a652311c50dc9b5674e00ea5f2a4","url":"C-ExtraResources/advanced-dns-topics.html"},{"revision":"05ed776b349f2ec78edfd077121622b7","url":"C-ExtraResources/advanced-dns.html"},{"revision":"238b116503e06c8a1ac7586be12f1ef5","url":"C-ExtraResources/ansible-setup.html"},{"revision":"0b72e5fdbacdbacb41b0fee7948ecb79","url":"C-ExtraResources/bind-configuration.html"},{"revision":"270a4cb6988186870b32c8c761515f45","url":"C-ExtraResources/dns-review.html"},{"revision":"3f11bf5eea501a5127d624b2bf89363f","url":"C-ExtraResources/domainreg.html"},{"revision":"de834d911af763d2c07ec4e1d8546c81","url":"C-ExtraResources/due-dates.html"},{"revision":"a33763bf961e1599c5e6b71e37db411f","url":"C-ExtraResources/email-protocols-2.html"},{"revision":"70d4eb816e45f23f8525e2c01774b05d","url":"C-ExtraResources/email-protocols.html"},{"revision":"ad265b956b25c5f9d871c294ad8e4746","url":"C-ExtraResources/Get Device Name.html"},{"revision":"45d07e99554788dbfc2ea754dd81dcde","url":"C-ExtraResources/get-root-zone.html"},{"revision":"0cc649195276a7c40aa9eaf4f37f5a28","url":"C-ExtraResources/internet-mail-system.html"},{"revision":"a9f80fec0f357c69eed127e33ae6b7ba","url":"C-ExtraResources/ldap-protocol.html"},{"revision":"c5f441f19384a141e38f67c811510159","url":"C-ExtraResources/linux-firewall-review.html"},{"revision":"3d0458a132271a7a1617305bcac13e87","url":"C-ExtraResources/local-and-network-security.html"},{"revision":"db3655366eadfa7610cf9e4ecf8c1025","url":"C-ExtraResources/network-address.html"},{"revision":"df1aafd7bb93edb16b404c5d221d9796","url":"C-ExtraResources/network-file-system.html"},{"revision":"b9c682e6749d8eeab0a2863b99e96714","url":"C-ExtraResources/network-storage-and-access.html"},{"revision":"c7203bf07ac3effafdabb09e4308a08c","url":"C-ExtraResources/openldap-server-admin.html"},{"revision":"95dd17e4822e6f6af0defee27b1fbdb3","url":"C-ExtraResources/postfix-spf.html"},{"revision":"99510827a8c73256eee516272a44b8ff","url":"C-ExtraResources/prerequisite-review.html"},{"revision":"4e6214a1044b5ccaf8270513d31074c4","url":"C-ExtraResources/required-material-list.html"},{"revision":"44241ff4826936bce28d3d87fcbae3a5","url":"C-ExtraResources/sample-ansible-hosts.html"},{"revision":"c249a18b211f05eff12b49f8980887bd","url":"C-ExtraResources/startup-script-with-systemd.html"},{"revision":"d2e46fa80c20affc6e474d9e36d4de1e","url":"C-ExtraResources/tcp-ip-network-review.html"},{"revision":"a7cc4071cf5bcfd5e5ab491ba78ffc55","url":"C-ExtraResources/virtual-lan.html"},{"revision":"e9fd2a8fa2816be48abd22498ce19ae7","url":"C-ExtraResources/vls2vls-routing.html"},{"revision":"ee6ef1e3d87ce3c3eb9e39514f3b1384","url":"index.html"},{"revision":"2524df02c6e551be5aef857403777080","url":"manifest.json"},{"revision":"f6e3ea8c24e3002a5e8c2995cd07dc8d","url":"weekly-schedule.html"},{"revision":"7fa1a026116afe175cae818030d4ffc4","url":"img/docusaurus.png"},{"revision":"ef2266bfb84465c731756b58cde0afb8","url":"img/favicon.ico"},{"revision":"22c6eb8088b86099d5a78b5a13f7b24d","url":"img/logo-dark.svg"},{"revision":"8817e00103e8837d17c2758b0ce25c41","url":"img/logo.svg"},{"revision":"2e1cb1ba37fc5ae886ea57248bdb60bd","url":"img/pwa/icon-192x192.png"},{"revision":"a0f8ed72d3d3489353a57a03aeac9b0d","url":"img/pwa/icon-256x256.png"},{"revision":"ab9ed19e2716b5c233d6132d66204d53","url":"img/pwa/icon-384x384.png"},{"revision":"b71acc5b894ccfac0c22eb39a590f2a0","url":"img/pwa/icon-512x512.png"},{"revision":"b9d9189ed8f8dd58e70d9f8b3f693b3e","url":"img/tutorial/docsVersionDropdown.png"},{"revision":"c14bff79aafafca0957ccc34ee026e2c","url":"img/tutorial/localeDropdown.png"},{"revision":"8d04d316f4d1777793ee773fcbf16cea","url":"img/undraw_docusaurus_mountain.svg"},{"revision":"3d3d63efa464a74e2befd1569465ed21","url":"img/undraw_docusaurus_react.svg"},{"revision":"932b535fc71feb29877bc4b9d708b1d0","url":"img/undraw_docusaurus_tree.svg"}],s=new v({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=new URL(e,self.location.href);return t.origin!==self.location.origin?[]:(t.search="",t.hash="",[t.href,`${t.href}${t.pathname.endsWith("/")?"":"/"}index.html`])}(a);for(const i of n){const r=s.getCacheKeyForURL(i);if(r){const s=caches.match(r);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:i,possibleURLs:n,cacheKey:r,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});const s=t.data?.type;"SKIP_WAITING"===s&&self.skipWaiting()}))})()})()})();