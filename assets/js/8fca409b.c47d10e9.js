"use strict";(self.webpackChunkOPS535=self.webpackChunkOPS535||[]).push([[5035],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=u(n),d=a,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||o;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5887:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return i},default:function(){return p},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return u}});var r=n(3117),a=(n(7294),n(3905));const o={id:"Get Device Name",title:"Get Device Name",sidebar_position:22,description:"Get Device Name"},i="Get Device Name",c={unversionedId:"C-ExtraResources/Get Device Name",id:"C-ExtraResources/Get Device Name",title:"Get Device Name",description:"Get Device Name",source:"@site/docs/C-ExtraResources/get-device-name.md",sourceDirName:"C-ExtraResources",slug:"/C-ExtraResources/Get Device Name",permalink:"/OPS535/C-ExtraResources/Get Device Name",draft:!1,editUrl:"https://github.com/Seneca-ICTOER/OERTemplate/tree/main/docs/C-ExtraResources/get-device-name.md",tags:[],version:"current",sidebarPosition:22,frontMatter:{id:"Get Device Name",title:"Get Device Name",sidebar_position:22,description:"Get Device Name"},sidebar:"courseNotesSidebar",previous:{title:"Virtual-Lan",permalink:"/OPS535/C-ExtraResources/virtual-lan"},next:{title:"Network Address",permalink:"/OPS535/C-ExtraResources/network-address"}},s={},u=[],l={toc:u};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"get-device-name"},"Get Device Name"),(0,a.kt)("p",null,"Sample script for locating the Network Device name that is connected to the Lab's network in TEL Buildinig."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'#! /bin/bash\n# get all the NIC device name in the system\ndev_names=$(/sbin/ifconfig | grep HWaddr| awk -F: \'{print $1}\' | sort -u )\n\n# for centos7 replace HWaddr with flags\n\n\n# set a loop to loop through each device name\n#\nmy_dev=\nTARGET_IP=10.40\n\nfor d_name in ${dev_names}\ndo\n\necho "Checking device name $d_name ..."\n\nstatus=$(/sbin/ifconfig $d_name|grep ${TARGET_IP})\n\nif [ ! -z "$status" ]\nthen\n        echo "$d_name contains the target IP $TARGET_IP"\n        my_dev=$d_name\nfi\ndone\necho "The target NIC device name should be $my_dev"\n')))}p.isMDXComponent=!0}}]);